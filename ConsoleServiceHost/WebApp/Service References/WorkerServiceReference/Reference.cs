//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApp.WorkerServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Worker", Namespace="http://schemas.datacontract.org/2004/07/InfoTecsTestApp.Model")]
    [System.SerializableAttribute()]
    public partial class Worker : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid WorkerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkerNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Cost {
            get {
                return this.CostField;
            }
            set {
                if ((this.CostField.Equals(value) != true)) {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Specialty {
            get {
                return this.SpecialtyField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialtyField, value) != true)) {
                    this.SpecialtyField = value;
                    this.RaisePropertyChanged("Specialty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid WorkerId {
            get {
                return this.WorkerIdField;
            }
            set {
                if ((this.WorkerIdField.Equals(value) != true)) {
                    this.WorkerIdField = value;
                    this.RaisePropertyChanged("WorkerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkerName {
            get {
                return this.WorkerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkerNameField, value) != true)) {
                    this.WorkerNameField = value;
                    this.RaisePropertyChanged("WorkerName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkerObject", Namespace="http://schemas.datacontract.org/2004/07/InfoTecsTestApp.Model")]
    [System.SerializableAttribute()]
    public partial class WorkerObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkerCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid WorkerObjectIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkerCount {
            get {
                return this.WorkerCountField;
            }
            set {
                if ((this.WorkerCountField.Equals(value) != true)) {
                    this.WorkerCountField = value;
                    this.RaisePropertyChanged("WorkerCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid WorkerObjectId {
            get {
                return this.WorkerObjectIdField;
            }
            set {
                if ((this.WorkerObjectIdField.Equals(value) != true)) {
                    this.WorkerObjectIdField = value;
                    this.RaisePropertyChanged("WorkerObjectId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WorkerServiceReference.IWorkerWcfService")]
    public interface IWorkerWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkerWcfService/CreateWorker", ReplyAction="http://tempuri.org/IWorkerWcfService/CreateWorkerResponse")]
        void CreateWorker(WebApp.WorkerServiceReference.Worker worker);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkerWcfService/CreateWorker", ReplyAction="http://tempuri.org/IWorkerWcfService/CreateWorkerResponse")]
        System.Threading.Tasks.Task CreateWorkerAsync(WebApp.WorkerServiceReference.Worker worker);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkerWcfService/CreateWorkerObject", ReplyAction="http://tempuri.org/IWorkerWcfService/CreateWorkerObjectResponse")]
        void CreateWorkerObject(WebApp.WorkerServiceReference.WorkerObject workerObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkerWcfService/CreateWorkerObject", ReplyAction="http://tempuri.org/IWorkerWcfService/CreateWorkerObjectResponse")]
        System.Threading.Tasks.Task CreateWorkerObjectAsync(WebApp.WorkerServiceReference.WorkerObject workerObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkerWcfService/DeleteWorker", ReplyAction="http://tempuri.org/IWorkerWcfService/DeleteWorkerResponse")]
        void DeleteWorker(System.Guid workerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkerWcfService/DeleteWorker", ReplyAction="http://tempuri.org/IWorkerWcfService/DeleteWorkerResponse")]
        System.Threading.Tasks.Task DeleteWorkerAsync(System.Guid workerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkerWcfService/DeleteWorkerObject", ReplyAction="http://tempuri.org/IWorkerWcfService/DeleteWorkerObjectResponse")]
        void DeleteWorkerObject(System.Guid workerObjectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkerWcfService/DeleteWorkerObject", ReplyAction="http://tempuri.org/IWorkerWcfService/DeleteWorkerObjectResponse")]
        System.Threading.Tasks.Task DeleteWorkerObjectAsync(System.Guid workerObjectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkerWcfService/GetWorkerObjects", ReplyAction="http://tempuri.org/IWorkerWcfService/GetWorkerObjectsResponse")]
        WebApp.WorkerServiceReference.WorkerObject[] GetWorkerObjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkerWcfService/GetWorkerObjects", ReplyAction="http://tempuri.org/IWorkerWcfService/GetWorkerObjectsResponse")]
        System.Threading.Tasks.Task<WebApp.WorkerServiceReference.WorkerObject[]> GetWorkerObjectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkerWcfService/GetWorkers", ReplyAction="http://tempuri.org/IWorkerWcfService/GetWorkersResponse")]
        WebApp.WorkerServiceReference.Worker[] GetWorkers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkerWcfService/GetWorkers", ReplyAction="http://tempuri.org/IWorkerWcfService/GetWorkersResponse")]
        System.Threading.Tasks.Task<WebApp.WorkerServiceReference.Worker[]> GetWorkersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkerWcfService/UpdateWorker", ReplyAction="http://tempuri.org/IWorkerWcfService/UpdateWorkerResponse")]
        void UpdateWorker(WebApp.WorkerServiceReference.Worker worker);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkerWcfService/UpdateWorker", ReplyAction="http://tempuri.org/IWorkerWcfService/UpdateWorkerResponse")]
        System.Threading.Tasks.Task UpdateWorkerAsync(WebApp.WorkerServiceReference.Worker worker);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkerWcfService/UpdateWorkerObject", ReplyAction="http://tempuri.org/IWorkerWcfService/UpdateWorkerObjectResponse")]
        void UpdateWorkerObject(WebApp.WorkerServiceReference.WorkerObject workerObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkerWcfService/UpdateWorkerObject", ReplyAction="http://tempuri.org/IWorkerWcfService/UpdateWorkerObjectResponse")]
        System.Threading.Tasks.Task UpdateWorkerObjectAsync(WebApp.WorkerServiceReference.WorkerObject workerObject);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWorkerWcfServiceChannel : WebApp.WorkerServiceReference.IWorkerWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkerWcfServiceClient : System.ServiceModel.ClientBase<WebApp.WorkerServiceReference.IWorkerWcfService>, WebApp.WorkerServiceReference.IWorkerWcfService {
        
        public WorkerWcfServiceClient() {
        }
        
        public WorkerWcfServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WorkerWcfServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WorkerWcfServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WorkerWcfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateWorker(WebApp.WorkerServiceReference.Worker worker) {
            base.Channel.CreateWorker(worker);
        }
        
        public System.Threading.Tasks.Task CreateWorkerAsync(WebApp.WorkerServiceReference.Worker worker) {
            return base.Channel.CreateWorkerAsync(worker);
        }
        
        public void CreateWorkerObject(WebApp.WorkerServiceReference.WorkerObject workerObject) {
            base.Channel.CreateWorkerObject(workerObject);
        }
        
        public System.Threading.Tasks.Task CreateWorkerObjectAsync(WebApp.WorkerServiceReference.WorkerObject workerObject) {
            return base.Channel.CreateWorkerObjectAsync(workerObject);
        }
        
        public void DeleteWorker(System.Guid workerId) {
            base.Channel.DeleteWorker(workerId);
        }
        
        public System.Threading.Tasks.Task DeleteWorkerAsync(System.Guid workerId) {
            return base.Channel.DeleteWorkerAsync(workerId);
        }
        
        public void DeleteWorkerObject(System.Guid workerObjectId) {
            base.Channel.DeleteWorkerObject(workerObjectId);
        }
        
        public System.Threading.Tasks.Task DeleteWorkerObjectAsync(System.Guid workerObjectId) {
            return base.Channel.DeleteWorkerObjectAsync(workerObjectId);
        }
        
        public WebApp.WorkerServiceReference.WorkerObject[] GetWorkerObjects() {
            return base.Channel.GetWorkerObjects();
        }
        
        public System.Threading.Tasks.Task<WebApp.WorkerServiceReference.WorkerObject[]> GetWorkerObjectsAsync() {
            return base.Channel.GetWorkerObjectsAsync();
        }
        
        public WebApp.WorkerServiceReference.Worker[] GetWorkers() {
            return base.Channel.GetWorkers();
        }
        
        public System.Threading.Tasks.Task<WebApp.WorkerServiceReference.Worker[]> GetWorkersAsync() {
            return base.Channel.GetWorkersAsync();
        }
        
        public void UpdateWorker(WebApp.WorkerServiceReference.Worker worker) {
            base.Channel.UpdateWorker(worker);
        }
        
        public System.Threading.Tasks.Task UpdateWorkerAsync(WebApp.WorkerServiceReference.Worker worker) {
            return base.Channel.UpdateWorkerAsync(worker);
        }
        
        public void UpdateWorkerObject(WebApp.WorkerServiceReference.WorkerObject workerObject) {
            base.Channel.UpdateWorkerObject(workerObject);
        }
        
        public System.Threading.Tasks.Task UpdateWorkerObjectAsync(WebApp.WorkerServiceReference.WorkerObject workerObject) {
            return base.Channel.UpdateWorkerObjectAsync(workerObject);
        }
    }
}
